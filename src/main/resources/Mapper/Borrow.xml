<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.libraryboot.Mapper.BorrowMapper">
    <insert id="saveRetur">
        insert into retur(book_name, book_no, user_no, user_name, user_phone, score, nums, days, return_date, real_date,
                          status)
        values (#{bookName}, #{bookNo}, #{userNo}, #{userName}, #{userPhone}, #{score}, #{nums}, #{days}, #{returnDate},
                #{realDate}, #{status})
    </insert>
    <insert id="save">
        insert into borrow(book_name, book_no, user_no, user_name, user_phone, score, nums, days, return_date)
        values (#{bookName}, #{bookNo}, #{userNo}, #{userName}, #{userPhone}, #{score}, #{nums}, #{days}, #{returnDate})
    </insert>
    <update id="UpdateById">
        update borrow
        set book_name=#{bookName},
            book_no=#{bookNo},
            user_no=#{userNo},
            user_name=#{userName},
            user_phone=#{userPhone},
            score=#{score},
            updatetime=#{updatetime},
            nums=#{nums},
            status=#{status},
            days=#{days},
            return_date=#{returnDate},
            where id = #{id}
    </update>
    <update id="updateStatus">
        update borrow
        set status=#{status}
        where id = #{id}
    </update>

    <delete id="DeleteById">
        delete
        from borrow
        where id = #{id}
    </delete>
    <delete id="DeleteReturById">
        delete
        from retur
        where id = #{id}
    </delete>
    <select id="list1" resultType="com.example.libraryboot.entity.Borrow">
        select *
        from borrow
        where id = #{id}
        order by id desc
    </select>
    <select id="list" resultType="com.example.libraryboot.entity.Borrow">
        select *
        from borrow
    </select>
    <!--    模糊查詢-->
    <select id="listByCondition" resultType="com.example.libraryboot.entity.Borrow">
        select *from borrow
        <where>
            <if test="bookName!=null and bookName!='' ">
                book_name like concat('%',#{bookName},'%')
            </if>
            <if test="bookNo!=null and bookNo!='' ">
                and book_no =#{bookNo}
            </if>
            <if test="userName!=null and userName!='' ">
                and user_name like concat('%',#{userName},'%')
            </if>
        </where>
        order by id
    </select>
    <select id="listReturByCondition" resultType="com.example.libraryboot.entity.Retur">
        select *from retur
        <where>
            <if test="bookName!=null and bookName!='' ">
                book_name like concat('%',#{bookName},'%')
            </if>
            <if test="bookNo!=null and bookNo!='' ">
                and book_no =#{bookNo}
            </if>
            <if test="userName!=null and userName!='' ">
                and user_name like concat('%',#{userName},'%')
            </if>
        </where>
        order by id

    </select>
    <select id="getById" resultType="com.example.libraryboot.entity.Borrow">
        select *
        from borrow
        where id = #{id}
    </select>
    <select id="listRetur" resultType="com.example.libraryboot.entity.Retur">
        select *
        from retur
        where id = #{id}
        order by id desc
    </select>
    <select id="getCountByTimeRange" resultType="com.example.libraryboot.Controller.Request.BorrowReturCountPO">
        select count(id) as count ,DATE_FORMAT(createtime,'%Y-%m-%d') as date from
        <if test="type==1">
            borrow
        </if>
        <if test="type==2">
            retur
        </if>
        where
        <choose>
            <when test="timeRange=='week'">
                createtime >= DATE_SUB(NOW(),INTERVAL 1 WEEK)
            </when>
            <when test="timeRange=='month'">
                createtime >= DATE_SUB(NOW(),INTERVAL 1 WEEK)
            </when>
            <when test="timeRange=='month2'">
                createtime >= DATE_SUB(NOW(),INTERVAL 2 WEEK)
            </when>
            <when test="timeRange=='month3'">
                createtime >= DATE_SUB(NOW(),INTERVAL 3 WEEK)
            </when>
            <otherwise>
                createtime>now()
            </otherwise>
        </choose>
        group by date
    </select>

</mapper>